= content_for :page_title do
  - if params[:location]
    Search results for "#{params[:search]}" around #{params[:location]}
  - else
    Search results for "#{params[:search]}"


= content_for :extra_javascript do
  -# This has to be present in either view and come before the other js that
  -# might be loaded if we're showing results, hence it comes at the top
  %script
    var PlanningAlerts = window.PlanningAlerts || {};
    PlanningAlerts['search'] = {};
    - if @applications_json
      PlanningAlerts.search['applications'] = #{raw @applications_json};
    - else
      PlanningAlerts.search['applications'] = [];
    - if @search and @search.is_location_search?
      PlanningAlerts.search['lat'] = #{@search.lat};
      PlanningAlerts.search['lng'] = #{@search.lng};
    PlanningAlerts.search['categories'] = #{raw @categories_json};

= content_for :extra_javascript, javascript_include_tag("hampshire.search_box")

- if @show_results
  = content_for :extra_body_classes, "search-results"
  %h3= "Search"

  #searchbar
    = render "search_widget"

  #sidebar
    - if @display == "map"
      = link_to 'List view', params.merge({:display => 'list'}), :class => 'results-display-link'
    - elsif @map_display_possible
      = link_to 'Map view', params.merge({:display => 'map'}), :class => 'results-display-link'

  #list{:class => 'results-display'}
    - if @applications
      = paginated_section @applications, :previous_label => "« Newer", :next_label => "Older »" do
        = render "applications", :applications => @applications

  - if @display == "map"
    #map{:class => 'results-display'}
      %p Sorry, there would be a map here, but you need to have javascript enabled to view it.

  = render "search_debug"

  = content_for :extra_javascript do
    = render "js_marker_template"
  = content_for :extra_javascript, javascript_include_tag("hampshire.search_map")
- else
  = content_for :extra_body_classes, "initial-search"
  = render "address_search_preamble"
  = render "initial_search_form"
