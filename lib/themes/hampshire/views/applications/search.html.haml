= content_for :page_title do
  - if @show_results
    - if params[:location]
      Search results for "#{params[:search]}" around #{params[:location]}
    - else
      Search results for "#{params[:search]}"


= content_for :extra_javascript do
  -# This has to be present in either view and come before the other js that
  -# might be loaded if we're showing results, hence it comes at the top
  %script
    PlanningAlerts['search'] = {};
    - if @applications_json
      PlanningAlerts.search['applications'] = #{raw @applications_json};
    - else
      PlanningAlerts.search['applications'] = [];
    - if @search and @search.is_location_search?
      PlanningAlerts.search['lat'] = #{@search.lat};
      PlanningAlerts.search['lng'] = #{@search.lng};
    PlanningAlerts.search['categories'] = #{raw @categories_json};

= content_for :extra_javascript, javascript_include_tag("hampshire.search_box")

- if @show_results
  = content_for :extra_body_classes, "search-results"

  #searchbar
    = render "search_widget"

  #results.container
    #sidebar
      - if @search.stats[:total_results] >= 1000
        -# The search engine limits results to the top 1,000
        %h2 Found more than <strong>1,000</strong> matching planning applications
        %p These are the top 1,000 results
      - else
        %h2 Found <strong>#{@search.stats[:total_results]}</strong> matching planning applications
      %p
        Show results
        - if @display == "map"
          = link_to 'as a list', params.merge({:display => 'list'}), :class => 'results-display-link'
        - elsif @map_display_possible
          = link_to 'on a map', params.merge({:display => 'map'}), :class => 'results-display-link'
      - if @search.status.blank?
        -# We can only show these stats if we're not already filtering by a
        -# status.
        #sidebar-stats
          %p.approved
            %span.status Approved
            %span.visualisation
              %span.bar{:style => "width: #{@search.stats[:percentage_approved]}%"} #{@search.stats[:percentage_approved]}%
          %p.rejected
            %span.status Rejected
            %span.visualisation
              %span.bar{:style => "width: #{@search.stats[:percentage_refused]}%"} #{@search.stats[:percentage_refused]}%
          %p.pending
            %span.status In progress
            %span.visualisation
              %span.bar{:style => "width: #{@search.stats[:percentage_current]}%"} #{@search.stats[:percentage_current]}%
        - unless @authority.blank?
          %p
            See more statistics for
            = link_to "#{@authority.full_name}", authority_path(@authority.short_name_encoded), :class => 'parent-council-link'
      - else
        - unless @authority.blank?
          %p
            See statistics for
            = link_to "#{@authority.full_name}", authority_path(@authority.short_name_encoded), :class => 'parent-council-link'

    - if @display == "map"
      %noscript
        #list{:class => 'results-display'}
          - if @applications and @applications.total_entries > 0
            = paginated_section @applications, :previous_label => "« Newer", :next_label => "Older »", :inner_window => 1 do
              = render "applications", :applications => @applications
          - else
            %p.no-results
              Sorry, no results matched that search, perhaps try again with less specific keywords, or in a different location?
    - else
      #list{:class => 'results-display'}
        - if @applications and @applications.total_entries > 0
          = paginated_section @applications, :previous_label => "« Newer", :next_label => "Older »", :inner_window => 1 do
            = render "applications", :applications => @applications
        - else
          %p.no-results
            Sorry, no results matched that search, perhaps try again with less specific keywords, or in a different location?

  - if @display == "map"
    #map{:class => 'results-display'}

  = content_for :extra_javascript do
    = render "js_marker_template"
  = content_for :extra_javascript, javascript_include_tag("hampshire.map_styles")
  = content_for :extra_javascript, javascript_include_tag("hampshire.search_map")
- else
  = content_for :extra_body_classes, "initial-search"
  = render "initial_search_form"
